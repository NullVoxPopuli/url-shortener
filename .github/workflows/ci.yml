name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}
  merge_group:
    types: [checks_requested]

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: "pnpm lint:fix"
      - run: git diff --exit-code

  types:
    name: Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm typecheck

  tests_api:
    name: API Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    # Here we test using postgres, because
    # that's what production uses.
    # We use sqlite locally, because postgres
    # is _very_ invasive on a system.
    # You could use docker, but docker is also a bit invasive.
    # services:
    #   postgres:
    #     # name of dockerhub image
    #     image: postgres
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: postgres_db
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       # Exposes this port to the host
    #       - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: ./config/hosts.sh
      - uses: ikalnytskyi/action-setup-postgres@e5d0db00b54ca4068073e312e72d31bdf30a6a97
        with:
          username: postgres_u
          password: postgres_pw
          database: postgres_db
          port: 34837
          ssl: "on"
        id: postgres
      - run: |
          # pnpm run rebuild
          # pnpm playwright install --with-deps
          set -a
          source .env.test
          export DB_CONNECTION=postgres
          # This looks ridiculous lol
          export DATABASE_URL="${{ steps.postgres.outputs.connection-uri }}?sslcert=${{ steps.postgres.outputs.certificate-path }}"
          pnpm ace migration:fresh
          pnpm ace test
        working-directory: api
        env:
          PGSSLMODE: verify-full
          PGSSLROOTCERT: ${{ steps.postgres.outputs.certificate-path }}

  tests_spa:
    name: SPA Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      # bug with ignore-scripts=true?
      # - run: pnpm rebuild
      - run: pnpm test
        working-directory: web-client

  build:
    name: Build
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      # bug with ignore-scripts=true?
      # - run: pnpm rebuild
      - run: pnpm build
        working-directory: api

  # build_api_image:
  #   name: "Build API Image"
  #   timeout-minutes: 5
  #   runs-on: ubuntu-latest
  #   needs: [tests_api, tests_spa]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: heroku container:login
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #     - run: heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #
